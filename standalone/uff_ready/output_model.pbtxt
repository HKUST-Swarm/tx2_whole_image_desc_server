node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 480
        }
        dim {
          size: 752
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "conv1_pad/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_pad/Pad"
  op: "Pad"
  input: "input_1"
  input: "conv1_pad/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.138013109565
      }
    }
  }
}
node {
  name: "conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.138013109565
      }
    }
  }
}
node {
  name: "conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 970266
    }
  }
}
node {
  name: "conv1/random_uniform/sub"
  op: "Sub"
  input: "conv1/random_uniform/max"
  input: "conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform/mul"
  op: "Mul"
  input: "conv1/random_uniform/RandomUniform"
  input: "conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform"
  op: "Add"
  input: "conv1/random_uniform/mul"
  input: "conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/kernel/Assign"
  op: "Assign"
  input: "conv1/kernel"
  input: "conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/kernel/read"
  op: "Identity"
  input: "conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
}
node {
  name: "conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/convolution"
  op: "Conv2D"
  input: "conv1_pad/Pad"
  input: "conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/gamma/Assign"
  op: "Assign"
  input: "conv1_bn/gamma"
  input: "conv1_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/gamma/read"
  op: "Identity"
  input: "conv1_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/beta/Assign"
  op: "Assign"
  input: "conv1_bn/beta"
  input: "conv1_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/beta/read"
  op: "Identity"
  input: "conv1_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
}
node {
  name: "conv1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv1_bn/moving_mean"
  input: "conv1_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_mean/read"
  op: "Identity"
  input: "conv1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv1_bn/moving_variance"
  input: "conv1_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_variance/read"
  op: "Identity"
  input: "conv1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/init"
  op: "NoOp"
  input: "^conv1/kernel/Assign"
  input: "^conv1_bn/beta/Assign"
  input: "^conv1_bn/gamma/Assign"
  input: "^conv1_bn/moving_mean/Assign"
  input: "^conv1_bn/moving_variance/Assign"
}
node {
  name: "conv1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1/convolution"
  input: "conv1_bn/gamma/read"
  input: "conv1_bn/beta/read"
  input: "conv1_bn/Const_4"
  input: "conv1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/Shape"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv1_bn/Shape"
  input: "conv1_bn/strided_slice/stack"
  input: "conv1_bn/strided_slice/stack_1"
  input: "conv1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Shape_1"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv1_bn/Shape_1"
  input: "conv1_bn/strided_slice_1/stack"
  input: "conv1_bn/strided_slice_1/stack_1"
  input: "conv1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Shape_2"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv1_bn/Shape_2"
  input: "conv1_bn/strided_slice_2/stack"
  input: "conv1_bn/strided_slice_2/stack_1"
  input: "conv1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1_bn/Rank/packed"
  op: "Pack"
  input: "conv1_bn/strided_slice"
  input: "conv1_bn/strided_slice_1"
  input: "conv1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1_bn/range"
  op: "Range"
  input: "conv1_bn/range/start"
  input: "conv1_bn/Rank"
  input: "conv1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1_bn/Prod/input"
  op: "Pack"
  input: "conv1_bn/strided_slice"
  input: "conv1_bn/strided_slice_1"
  input: "conv1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_bn/Prod"
  op: "Prod"
  input: "conv1_bn/Prod/input"
  input: "conv1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/Cast"
  op: "Cast"
  input: "conv1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv1_bn/sub"
  op: "Sub"
  input: "conv1_bn/Cast"
  input: "conv1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/truediv"
  op: "RealDiv"
  input: "conv1_bn/Cast"
  input: "conv1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/mul"
  op: "Mul"
  input: "conv1_bn/FusedBatchNorm:2"
  input: "conv1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv1_bn/moving_mean/biased"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv1_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv1_bn/moving_mean/local_step"
  input: "conv1_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv1_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub"
  op: "Sub"
  input: "conv1_bn/moving_mean/biased/read"
  input: "conv1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/mul"
  op: "Mul"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub"
  input: "conv1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  op: "AssignSub"
  input: "conv1_bn/moving_mean/biased"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv1_bn/moving_mean/local_step"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/read"
  op: "Identity"
  input: "conv1_bn/moving_mean/biased"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_1/x"
  input: "conv1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv1_bn/moving_mean/local_step"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_1"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/conv1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_2/x"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/read"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv1_bn/moving_mean/read"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv1_bn/moving_mean"
  input: "conv1_bn/AssignMovingAvg/conv1_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv1_bn/moving_variance/biased"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv1_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv1_bn/moving_variance/local_step"
  input: "conv1_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv1_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub"
  op: "Sub"
  input: "conv1_bn/moving_variance/biased/read"
  input: "conv1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/mul"
  op: "Mul"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub"
  input: "conv1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  op: "AssignSub"
  input: "conv1_bn/moving_variance/biased"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv1_bn/moving_variance/local_step"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/read"
  op: "Identity"
  input: "conv1_bn/moving_variance/biased"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_1/x"
  input: "conv1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv1_bn/moving_variance/local_step"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_1"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/AssignAdd"
  input: "^conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/conv1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_2/x"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/read"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv1_bn/moving_variance/read"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv1_bn/moving_variance"
  input: "conv1_bn/AssignMovingAvg_1/conv1_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/keras_learning_phase/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "conv1_bn/keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "conv1_bn/keras_learning_phase/input"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "conv1_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv1_bn/cond/switch_t"
  op: "Identity"
  input: "conv1_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv1_bn/cond/switch_f"
  op: "Identity"
  input: "conv1_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv1_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv1_bn/cond/Switch_1"
  op: "Switch"
  input: "conv1_bn/FusedBatchNorm"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1_bn/cond/FusedBatchNorm/Switch"
  input: "conv1_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv1_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv1_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv1_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv1_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv1/convolution"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/convolution"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv1_bn/gamma/read"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv1_bn/beta/read"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv1_bn/moving_mean/read"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv1_bn/moving_variance/read"
  input: "conv1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1_bn/cond/Merge"
  op: "Merge"
  input: "conv1_bn/cond/FusedBatchNorm"
  input: "conv1_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_relu/Relu6"
  op: "Relu6"
  input: "conv1_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.142133817077
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142133817077
      }
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1932450
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_1/random_uniform/max"
  input: "conv_dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_1/random_uniform/RandomUniform"
  input: "conv_dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/random_uniform"
  op: "Add"
  input: "conv_dw_1/random_uniform/mul"
  input: "conv_dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_1/depthwise_kernel"
  input: "conv_dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv1_relu/Relu6"
  input: "conv_dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/gamma"
  input: "conv_dw_1_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_1_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/beta"
  input: "conv_dw_1_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/beta/read"
  op: "Identity"
  input: "conv_dw_1_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_mean"
  input: "conv_dw_1_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_variance"
  input: "conv_dw_1_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_1/depthwise"
  input: "conv_dw_1_bn/gamma/read"
  input: "conv_dw_1_bn/beta/read"
  input: "conv_dw_1_bn/Const_4"
  input: "conv_dw_1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape"
  input: "conv_dw_1_bn/strided_slice/stack"
  input: "conv_dw_1_bn/strided_slice/stack_1"
  input: "conv_dw_1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape_1"
  input: "conv_dw_1_bn/strided_slice_1/stack"
  input: "conv_dw_1_bn/strided_slice_1/stack_1"
  input: "conv_dw_1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_1_bn/Shape_2"
  input: "conv_dw_1_bn/strided_slice_2/stack"
  input: "conv_dw_1_bn/strided_slice_2/stack_1"
  input: "conv_dw_1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_1_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_1_bn/strided_slice"
  input: "conv_dw_1_bn/strided_slice_1"
  input: "conv_dw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/range"
  op: "Range"
  input: "conv_dw_1_bn/range/start"
  input: "conv_dw_1_bn/Rank"
  input: "conv_dw_1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_1_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_1_bn/strided_slice"
  input: "conv_dw_1_bn/strided_slice_1"
  input: "conv_dw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_1_bn/Prod"
  op: "Prod"
  input: "conv_dw_1_bn/Prod/input"
  input: "conv_dw_1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/Cast"
  op: "Cast"
  input: "conv_dw_1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/sub"
  op: "Sub"
  input: "conv_dw_1_bn/Cast"
  input: "conv_dw_1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_1_bn/Cast"
  input: "conv_dw_1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/mul"
  op: "Mul"
  input: "conv_dw_1_bn/FusedBatchNorm:2"
  input: "conv_dw_1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_mean/biased"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_mean/local_step"
  input: "conv_dw_1_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_1_bn/moving_mean/biased/read"
  input: "conv_dw_1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub"
  input: "conv_dw_1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_1_bn/moving_mean/biased"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_1_bn/moving_mean/local_step"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean/biased"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_1/x"
  input: "conv_dw_1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_1_bn/moving_mean/local_step"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_1"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/conv_dw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_2/x"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/read"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_1_bn/moving_mean/read"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_1_bn/moving_mean"
  input: "conv_dw_1_bn/AssignMovingAvg/conv_dw_1_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_variance/biased"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_1_bn/moving_variance/local_step"
  input: "conv_dw_1_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_1_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_1_bn/moving_variance/biased/read"
  input: "conv_dw_1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub"
  input: "conv_dw_1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_1_bn/moving_variance/biased"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_1_bn/moving_variance/local_step"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance/biased"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_1/x"
  input: "conv_dw_1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_1_bn/moving_variance/local_step"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_1"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/AssignAdd"
  input: "^conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/conv_dw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_2/x"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/read"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_1_bn/moving_variance/read"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_1_bn/moving_variance"
  input: "conv_dw_1_bn/AssignMovingAvg_1/conv_dw_1_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_1_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_1_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_1_bn/FusedBatchNorm"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_1_bn/cond/FusedBatchNorm/Switch"
  input: "conv_dw_1_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_dw_1_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_dw_1_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_dw_1_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_dw_1/depthwise"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_dw_1_bn/gamma/read"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_dw_1_bn/beta/read"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_dw_1_bn/moving_mean/read"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_dw_1_bn/moving_variance/read"
  input: "conv_dw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_1_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_1_bn/cond/FusedBatchNorm"
  input: "conv_dw_1_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_1_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_1_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4994013
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_1/random_uniform/max"
  input: "conv_pw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_1/random_uniform/RandomUniform"
  input: "conv_pw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/random_uniform"
  op: "Add"
  input: "conv_pw_1/random_uniform/mul"
  input: "conv_pw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1/kernel/Assign"
  op: "Assign"
  input: "conv_pw_1/kernel"
  input: "conv_pw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1/kernel/read"
  op: "Identity"
  input: "conv_pw_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_1/convolution"
  op: "Conv2D"
  input: "conv_dw_1_relu/Relu6"
  input: "conv_pw_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/gamma"
  input: "conv_pw_1_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_1_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/beta"
  input: "conv_pw_1_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/beta/read"
  op: "Identity"
  input: "conv_pw_1_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_mean"
  input: "conv_pw_1_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_variance"
  input: "conv_pw_1_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_1/convolution"
  input: "conv_pw_1_bn/gamma/read"
  input: "conv_pw_1_bn/beta/read"
  input: "conv_pw_1_bn/Const_4"
  input: "conv_pw_1_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape"
  input: "conv_pw_1_bn/strided_slice/stack"
  input: "conv_pw_1_bn/strided_slice/stack_1"
  input: "conv_pw_1_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape_1"
  input: "conv_pw_1_bn/strided_slice_1/stack"
  input: "conv_pw_1_bn/strided_slice_1/stack_1"
  input: "conv_pw_1_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_1_bn/Shape_2"
  input: "conv_pw_1_bn/strided_slice_2/stack"
  input: "conv_pw_1_bn/strided_slice_2/stack_1"
  input: "conv_pw_1_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_1_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_1_bn/strided_slice"
  input: "conv_pw_1_bn/strided_slice_1"
  input: "conv_pw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_1_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/range"
  op: "Range"
  input: "conv_pw_1_bn/range/start"
  input: "conv_pw_1_bn/Rank"
  input: "conv_pw_1_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_1_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_1_bn/strided_slice"
  input: "conv_pw_1_bn/strided_slice_1"
  input: "conv_pw_1_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_1_bn/Prod"
  op: "Prod"
  input: "conv_pw_1_bn/Prod/input"
  input: "conv_pw_1_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/Cast"
  op: "Cast"
  input: "conv_pw_1_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/sub"
  op: "Sub"
  input: "conv_pw_1_bn/Cast"
  input: "conv_pw_1_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_1_bn/Cast"
  input: "conv_pw_1_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/mul"
  op: "Mul"
  input: "conv_pw_1_bn/FusedBatchNorm:2"
  input: "conv_pw_1_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_mean/biased"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_mean/local_step"
  input: "conv_pw_1_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_1_bn/moving_mean/biased/read"
  input: "conv_pw_1_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub"
  input: "conv_pw_1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_1_bn/moving_mean/biased"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_1_bn/moving_mean/local_step"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean/biased"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_1/x"
  input: "conv_pw_1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_1_bn/moving_mean/local_step"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_1"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/conv_pw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_2/x"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/read"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_1_bn/moving_mean/read"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_1_bn/moving_mean"
  input: "conv_pw_1_bn/AssignMovingAvg/conv_pw_1_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_variance/biased"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_1_bn/moving_variance/local_step"
  input: "conv_pw_1_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_1_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_1_bn/moving_variance/biased/read"
  input: "conv_pw_1_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub"
  input: "conv_pw_1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_1_bn/moving_variance/biased"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_1_bn/moving_variance/local_step"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance/biased"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_1/x"
  input: "conv_pw_1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_1_bn/moving_variance/local_step"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_1"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/AssignAdd"
  input: "^conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/conv_pw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_2/x"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/read"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_1_bn/moving_variance/read"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_1_bn/moving_variance"
  input: "conv_pw_1_bn/AssignMovingAvg_1/conv_pw_1_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_1_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_1_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_1_bn/FusedBatchNorm"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_1_bn/cond/FusedBatchNorm/Switch"
  input: "conv_pw_1_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_pw_1_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_pw_1_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_pw_1_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_pw_1/convolution"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_pw_1_bn/gamma/read"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_pw_1_bn/beta/read"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_pw_1_bn/moving_mean/read"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_pw_1_bn/moving_variance/read"
  input: "conv_pw_1_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_1_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_1_bn/cond/FusedBatchNorm"
  input: "conv_pw_1_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_1_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_1_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_2/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_2/Pad"
  op: "Pad"
  input: "conv_pw_1_relu/Relu6"
  input: "conv_pad_2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.101273939013
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.101273939013
      }
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3440600
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_2/random_uniform/max"
  input: "conv_dw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_2/random_uniform/RandomUniform"
  input: "conv_dw_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/random_uniform"
  op: "Add"
  input: "conv_dw_2/random_uniform/mul"
  input: "conv_dw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_2/depthwise_kernel"
  input: "conv_dw_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_2/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_2/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_2/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_2/Pad"
  input: "conv_dw_2/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/gamma"
  input: "conv_dw_2_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_2_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/beta"
  input: "conv_dw_2_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/beta/read"
  op: "Identity"
  input: "conv_dw_2_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_mean"
  input: "conv_dw_2_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_variance"
  input: "conv_dw_2_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_2/depthwise"
  input: "conv_dw_2_bn/gamma/read"
  input: "conv_dw_2_bn/beta/read"
  input: "conv_dw_2_bn/Const_4"
  input: "conv_dw_2_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape"
  input: "conv_dw_2_bn/strided_slice/stack"
  input: "conv_dw_2_bn/strided_slice/stack_1"
  input: "conv_dw_2_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape_1"
  input: "conv_dw_2_bn/strided_slice_1/stack"
  input: "conv_dw_2_bn/strided_slice_1/stack_1"
  input: "conv_dw_2_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_2/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_2_bn/Shape_2"
  input: "conv_dw_2_bn/strided_slice_2/stack"
  input: "conv_dw_2_bn/strided_slice_2/stack_1"
  input: "conv_dw_2_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_2_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_2_bn/strided_slice"
  input: "conv_dw_2_bn/strided_slice_1"
  input: "conv_dw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_2_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/range"
  op: "Range"
  input: "conv_dw_2_bn/range/start"
  input: "conv_dw_2_bn/Rank"
  input: "conv_dw_2_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_2_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_2_bn/strided_slice"
  input: "conv_dw_2_bn/strided_slice_1"
  input: "conv_dw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_2_bn/Prod"
  op: "Prod"
  input: "conv_dw_2_bn/Prod/input"
  input: "conv_dw_2_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/Cast"
  op: "Cast"
  input: "conv_dw_2_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/sub"
  op: "Sub"
  input: "conv_dw_2_bn/Cast"
  input: "conv_dw_2_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_2_bn/Cast"
  input: "conv_dw_2_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/mul"
  op: "Mul"
  input: "conv_dw_2_bn/FusedBatchNorm:2"
  input: "conv_dw_2_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_mean/biased"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_mean/local_step"
  input: "conv_dw_2_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_2_bn/moving_mean/biased/read"
  input: "conv_dw_2_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub"
  input: "conv_dw_2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_2_bn/moving_mean/biased"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_2_bn/moving_mean/local_step"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean/biased"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_1/x"
  input: "conv_dw_2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_2_bn/moving_mean/local_step"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_1"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/conv_dw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_2/x"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/read"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_2_bn/moving_mean/read"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_2_bn/moving_mean"
  input: "conv_dw_2_bn/AssignMovingAvg/conv_dw_2_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_variance/biased"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_2_bn/moving_variance/local_step"
  input: "conv_dw_2_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_2_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_2_bn/moving_variance/biased/read"
  input: "conv_dw_2_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub"
  input: "conv_dw_2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_2_bn/moving_variance/biased"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_2_bn/moving_variance/local_step"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance/biased"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_1/x"
  input: "conv_dw_2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_2_bn/moving_variance/local_step"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_1"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/AssignAdd"
  input: "^conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/conv_dw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_2/x"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/read"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_2_bn/moving_variance/read"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_2_bn/moving_variance"
  input: "conv_dw_2_bn/AssignMovingAvg_1/conv_dw_2_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_2_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_2_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_2_bn/FusedBatchNorm"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_2_bn/cond/FusedBatchNorm/Switch"
  input: "conv_dw_2_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_dw_2_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_dw_2_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_dw_2_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_dw_2/depthwise"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_dw_2_bn/gamma/read"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_dw_2_bn/beta/read"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_dw_2_bn/moving_mean/read"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_dw_2_bn/moving_variance/read"
  input: "conv_dw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_2_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_2_bn/cond/FusedBatchNorm"
  input: "conv_dw_2_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_2_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_2_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.176776692271
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.176776692271
      }
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1068811
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_2/random_uniform/max"
  input: "conv_pw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_2/random_uniform/RandomUniform"
  input: "conv_pw_2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/random_uniform"
  op: "Add"
  input: "conv_pw_2/random_uniform/mul"
  input: "conv_pw_2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2/kernel/Assign"
  op: "Assign"
  input: "conv_pw_2/kernel"
  input: "conv_pw_2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2/kernel/read"
  op: "Identity"
  input: "conv_pw_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_2/convolution"
  op: "Conv2D"
  input: "conv_dw_2_relu/Relu6"
  input: "conv_pw_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/gamma"
  input: "conv_pw_2_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_2_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/beta"
  input: "conv_pw_2_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/beta/read"
  op: "Identity"
  input: "conv_pw_2_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_mean"
  input: "conv_pw_2_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_variance"
  input: "conv_pw_2_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_2/convolution"
  input: "conv_pw_2_bn/gamma/read"
  input: "conv_pw_2_bn/beta/read"
  input: "conv_pw_2_bn/Const_4"
  input: "conv_pw_2_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape"
  input: "conv_pw_2_bn/strided_slice/stack"
  input: "conv_pw_2_bn/strided_slice/stack_1"
  input: "conv_pw_2_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape_1"
  input: "conv_pw_2_bn/strided_slice_1/stack"
  input: "conv_pw_2_bn/strided_slice_1/stack_1"
  input: "conv_pw_2_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_2_bn/Shape_2"
  input: "conv_pw_2_bn/strided_slice_2/stack"
  input: "conv_pw_2_bn/strided_slice_2/stack_1"
  input: "conv_pw_2_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_2_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_2_bn/strided_slice"
  input: "conv_pw_2_bn/strided_slice_1"
  input: "conv_pw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_2_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/range"
  op: "Range"
  input: "conv_pw_2_bn/range/start"
  input: "conv_pw_2_bn/Rank"
  input: "conv_pw_2_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_2_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_2_bn/strided_slice"
  input: "conv_pw_2_bn/strided_slice_1"
  input: "conv_pw_2_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_2_bn/Prod"
  op: "Prod"
  input: "conv_pw_2_bn/Prod/input"
  input: "conv_pw_2_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/Cast"
  op: "Cast"
  input: "conv_pw_2_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/sub"
  op: "Sub"
  input: "conv_pw_2_bn/Cast"
  input: "conv_pw_2_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_2_bn/Cast"
  input: "conv_pw_2_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/mul"
  op: "Mul"
  input: "conv_pw_2_bn/FusedBatchNorm:2"
  input: "conv_pw_2_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_mean/biased"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_mean/local_step"
  input: "conv_pw_2_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_2_bn/moving_mean/biased/read"
  input: "conv_pw_2_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub"
  input: "conv_pw_2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_2_bn/moving_mean/biased"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_2_bn/moving_mean/local_step"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean/biased"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_1/x"
  input: "conv_pw_2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_2_bn/moving_mean/local_step"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_1"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/conv_pw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_2/x"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/read"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_2_bn/moving_mean/read"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_2_bn/moving_mean"
  input: "conv_pw_2_bn/AssignMovingAvg/conv_pw_2_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_variance/biased"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_2_bn/moving_variance/local_step"
  input: "conv_pw_2_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_2_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_2_bn/moving_variance/biased/read"
  input: "conv_pw_2_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub"
  input: "conv_pw_2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_2_bn/moving_variance/biased"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_2_bn/moving_variance/local_step"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance/biased"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_1/x"
  input: "conv_pw_2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_2_bn/moving_variance/local_step"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_1"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/AssignAdd"
  input: "^conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/conv_pw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_2/x"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/read"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_2_bn/moving_variance/read"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_2_bn/moving_variance"
  input: "conv_pw_2_bn/AssignMovingAvg_1/conv_pw_2_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_2_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_2_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_2_bn/FusedBatchNorm"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_2_bn/cond/FusedBatchNorm/Switch"
  input: "conv_pw_2_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_pw_2_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_pw_2_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_pw_2_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_pw_2/convolution"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_pw_2_bn/gamma/read"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_pw_2_bn/beta/read"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_pw_2_bn/moving_mean/read"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_pw_2_bn/moving_variance/read"
  input: "conv_pw_2_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_2_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_2_bn/cond/FusedBatchNorm"
  input: "conv_pw_2_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_2_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_2_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138631
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138631
      }
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9953377
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_3/random_uniform/max"
  input: "conv_dw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_3/random_uniform/RandomUniform"
  input: "conv_dw_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/random_uniform"
  op: "Add"
  input: "conv_dw_3/random_uniform/mul"
  input: "conv_dw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_3/depthwise_kernel"
  input: "conv_dw_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_3/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_3/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_3/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_2_relu/Relu6"
  input: "conv_dw_3/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/gamma"
  input: "conv_dw_3_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_3_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/beta"
  input: "conv_dw_3_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/beta/read"
  op: "Identity"
  input: "conv_dw_3_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_mean"
  input: "conv_dw_3_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_variance"
  input: "conv_dw_3_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_3/depthwise"
  input: "conv_dw_3_bn/gamma/read"
  input: "conv_dw_3_bn/beta/read"
  input: "conv_dw_3_bn/Const_4"
  input: "conv_dw_3_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape"
  input: "conv_dw_3_bn/strided_slice/stack"
  input: "conv_dw_3_bn/strided_slice/stack_1"
  input: "conv_dw_3_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape_1"
  input: "conv_dw_3_bn/strided_slice_1/stack"
  input: "conv_dw_3_bn/strided_slice_1/stack_1"
  input: "conv_dw_3_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_3/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_3_bn/Shape_2"
  input: "conv_dw_3_bn/strided_slice_2/stack"
  input: "conv_dw_3_bn/strided_slice_2/stack_1"
  input: "conv_dw_3_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_3_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_3_bn/strided_slice"
  input: "conv_dw_3_bn/strided_slice_1"
  input: "conv_dw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_3_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/range"
  op: "Range"
  input: "conv_dw_3_bn/range/start"
  input: "conv_dw_3_bn/Rank"
  input: "conv_dw_3_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_3_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_3_bn/strided_slice"
  input: "conv_dw_3_bn/strided_slice_1"
  input: "conv_dw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_3_bn/Prod"
  op: "Prod"
  input: "conv_dw_3_bn/Prod/input"
  input: "conv_dw_3_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/Cast"
  op: "Cast"
  input: "conv_dw_3_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/sub"
  op: "Sub"
  input: "conv_dw_3_bn/Cast"
  input: "conv_dw_3_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_3_bn/Cast"
  input: "conv_dw_3_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/mul"
  op: "Mul"
  input: "conv_dw_3_bn/FusedBatchNorm:2"
  input: "conv_dw_3_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_mean/biased"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_mean/local_step"
  input: "conv_dw_3_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_3_bn/moving_mean/biased/read"
  input: "conv_dw_3_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub"
  input: "conv_dw_3_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_3_bn/moving_mean/biased"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_3_bn/moving_mean/local_step"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean/biased"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_1/x"
  input: "conv_dw_3_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_3_bn/moving_mean/local_step"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_1"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/conv_dw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_2/x"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/read"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_3_bn/moving_mean/read"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_3_bn/moving_mean"
  input: "conv_dw_3_bn/AssignMovingAvg/conv_dw_3_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_variance/biased"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_3_bn/moving_variance/local_step"
  input: "conv_dw_3_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_3_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_3_bn/moving_variance/biased/read"
  input: "conv_dw_3_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub"
  input: "conv_dw_3_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_3_bn/moving_variance/biased"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_3_bn/moving_variance/local_step"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance/biased"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_1/x"
  input: "conv_dw_3_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_3_bn/moving_variance/local_step"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_1"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/AssignAdd"
  input: "^conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/conv_dw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_2/x"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/read"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_3_bn/moving_variance/read"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_3_bn/moving_variance"
  input: "conv_dw_3_bn/AssignMovingAvg_1/conv_dw_3_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_3_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_3_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_3_bn/FusedBatchNorm"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_3_bn/cond/FusedBatchNorm/Switch"
  input: "conv_dw_3_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_dw_3_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_dw_3_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_dw_3_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_dw_3/depthwise"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_dw_3_bn/gamma/read"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_dw_3_bn/beta/read"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_dw_3_bn/moving_mean/read"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_dw_3_bn/moving_variance/read"
  input: "conv_dw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_3_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_3_bn/cond/FusedBatchNorm"
  input: "conv_dw_3_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_3_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_3_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.153093114495
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.153093114495
      }
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4497226
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_3/random_uniform/max"
  input: "conv_pw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_3/random_uniform/RandomUniform"
  input: "conv_pw_3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/random_uniform"
  op: "Add"
  input: "conv_pw_3/random_uniform/mul"
  input: "conv_pw_3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3/kernel/Assign"
  op: "Assign"
  input: "conv_pw_3/kernel"
  input: "conv_pw_3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3/kernel/read"
  op: "Identity"
  input: "conv_pw_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_3/convolution"
  op: "Conv2D"
  input: "conv_dw_3_relu/Relu6"
  input: "conv_pw_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/gamma"
  input: "conv_pw_3_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_3_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/beta"
  input: "conv_pw_3_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/beta/read"
  op: "Identity"
  input: "conv_pw_3_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_mean"
  input: "conv_pw_3_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_variance"
  input: "conv_pw_3_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_3/convolution"
  input: "conv_pw_3_bn/gamma/read"
  input: "conv_pw_3_bn/beta/read"
  input: "conv_pw_3_bn/Const_4"
  input: "conv_pw_3_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape"
  input: "conv_pw_3_bn/strided_slice/stack"
  input: "conv_pw_3_bn/strided_slice/stack_1"
  input: "conv_pw_3_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape_1"
  input: "conv_pw_3_bn/strided_slice_1/stack"
  input: "conv_pw_3_bn/strided_slice_1/stack_1"
  input: "conv_pw_3_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_3_bn/Shape_2"
  input: "conv_pw_3_bn/strided_slice_2/stack"
  input: "conv_pw_3_bn/strided_slice_2/stack_1"
  input: "conv_pw_3_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_3_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_3_bn/strided_slice"
  input: "conv_pw_3_bn/strided_slice_1"
  input: "conv_pw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_3_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/range"
  op: "Range"
  input: "conv_pw_3_bn/range/start"
  input: "conv_pw_3_bn/Rank"
  input: "conv_pw_3_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_3_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_3_bn/strided_slice"
  input: "conv_pw_3_bn/strided_slice_1"
  input: "conv_pw_3_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_3_bn/Prod"
  op: "Prod"
  input: "conv_pw_3_bn/Prod/input"
  input: "conv_pw_3_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/Cast"
  op: "Cast"
  input: "conv_pw_3_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/sub"
  op: "Sub"
  input: "conv_pw_3_bn/Cast"
  input: "conv_pw_3_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_3_bn/Cast"
  input: "conv_pw_3_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/mul"
  op: "Mul"
  input: "conv_pw_3_bn/FusedBatchNorm:2"
  input: "conv_pw_3_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_mean/biased"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_mean/local_step"
  input: "conv_pw_3_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_3_bn/moving_mean/biased/read"
  input: "conv_pw_3_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub"
  input: "conv_pw_3_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_3_bn/moving_mean/biased"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_3_bn/moving_mean/local_step"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean/biased"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_1/x"
  input: "conv_pw_3_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_3_bn/moving_mean/local_step"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_1"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/conv_pw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_2/x"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/read"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_3_bn/moving_mean/read"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_3_bn/moving_mean"
  input: "conv_pw_3_bn/AssignMovingAvg/conv_pw_3_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_variance/biased"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_3_bn/moving_variance/local_step"
  input: "conv_pw_3_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_3_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_3_bn/moving_variance/biased/read"
  input: "conv_pw_3_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub"
  input: "conv_pw_3_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_3_bn/moving_variance/biased"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_3_bn/moving_variance/local_step"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance/biased"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_1/x"
  input: "conv_pw_3_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_3_bn/moving_variance/local_step"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_1"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/AssignAdd"
  input: "^conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/conv_pw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_2/x"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/read"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_3_bn/moving_variance/read"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_3_bn/moving_variance"
  input: "conv_pw_3_bn/AssignMovingAvg_1/conv_pw_3_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_3_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_3_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_3_bn/FusedBatchNorm"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_3_bn/cond/FusedBatchNorm/Switch"
  input: "conv_pw_3_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_pw_3_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_pw_3_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_pw_3_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_pw_3/convolution"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_pw_3_bn/gamma/read"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_pw_3_bn/beta/read"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_pw_3_bn/moving_mean/read"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_pw_3_bn/moving_variance/read"
  input: "conv_pw_3_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_3_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_3_bn/cond/FusedBatchNorm"
  input: "conv_pw_3_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_3_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_3_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_4/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_4/Pad"
  op: "Pad"
  input: "conv_pw_3_relu/Relu6"
  input: "conv_pad_4/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138631
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138631
      }
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4577969
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_4/random_uniform/max"
  input: "conv_dw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_4/random_uniform/RandomUniform"
  input: "conv_dw_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/random_uniform"
  op: "Add"
  input: "conv_dw_4/random_uniform/mul"
  input: "conv_dw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_4/depthwise_kernel"
  input: "conv_dw_4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_4/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_4/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_4/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_4/Pad"
  input: "conv_dw_4/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/gamma"
  input: "conv_dw_4_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_4_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/beta"
  input: "conv_dw_4_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/beta/read"
  op: "Identity"
  input: "conv_dw_4_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_mean"
  input: "conv_dw_4_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_variance"
  input: "conv_dw_4_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_4/depthwise"
  input: "conv_dw_4_bn/gamma/read"
  input: "conv_dw_4_bn/beta/read"
  input: "conv_dw_4_bn/Const_4"
  input: "conv_dw_4_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape"
  input: "conv_dw_4_bn/strided_slice/stack"
  input: "conv_dw_4_bn/strided_slice/stack_1"
  input: "conv_dw_4_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape_1"
  input: "conv_dw_4_bn/strided_slice_1/stack"
  input: "conv_dw_4_bn/strided_slice_1/stack_1"
  input: "conv_dw_4_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_4/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_4_bn/Shape_2"
  input: "conv_dw_4_bn/strided_slice_2/stack"
  input: "conv_dw_4_bn/strided_slice_2/stack_1"
  input: "conv_dw_4_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_4_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_4_bn/strided_slice"
  input: "conv_dw_4_bn/strided_slice_1"
  input: "conv_dw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_4_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/range"
  op: "Range"
  input: "conv_dw_4_bn/range/start"
  input: "conv_dw_4_bn/Rank"
  input: "conv_dw_4_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_4_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_4_bn/strided_slice"
  input: "conv_dw_4_bn/strided_slice_1"
  input: "conv_dw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_4_bn/Prod"
  op: "Prod"
  input: "conv_dw_4_bn/Prod/input"
  input: "conv_dw_4_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/Cast"
  op: "Cast"
  input: "conv_dw_4_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/sub"
  op: "Sub"
  input: "conv_dw_4_bn/Cast"
  input: "conv_dw_4_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_4_bn/Cast"
  input: "conv_dw_4_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/mul"
  op: "Mul"
  input: "conv_dw_4_bn/FusedBatchNorm:2"
  input: "conv_dw_4_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_mean/biased"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_mean/local_step"
  input: "conv_dw_4_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_4_bn/moving_mean/biased/read"
  input: "conv_dw_4_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub"
  input: "conv_dw_4_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_4_bn/moving_mean/biased"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_4_bn/moving_mean/local_step"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean/biased"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_1/x"
  input: "conv_dw_4_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_4_bn/moving_mean/local_step"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_1"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/conv_dw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_2/x"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/read"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_4_bn/moving_mean/read"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_4_bn/moving_mean"
  input: "conv_dw_4_bn/AssignMovingAvg/conv_dw_4_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_variance/biased"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_4_bn/moving_variance/local_step"
  input: "conv_dw_4_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_4_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_4_bn/moving_variance/biased/read"
  input: "conv_dw_4_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub"
  input: "conv_dw_4_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_4_bn/moving_variance/biased"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_4_bn/moving_variance/local_step"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance/biased"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_1/x"
  input: "conv_dw_4_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_4_bn/moving_variance/local_step"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_1"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/AssignAdd"
  input: "^conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/conv_dw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_2/x"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/read"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_4_bn/moving_variance/read"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_4_bn/moving_variance"
  input: "conv_dw_4_bn/AssignMovingAvg_1/conv_dw_4_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_4_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_4_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_4_bn/FusedBatchNorm"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_4_bn/cond/FusedBatchNorm/Switch"
  input: "conv_dw_4_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_dw_4_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_dw_4_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_dw_4_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_dw_4/depthwise"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_dw_4_bn/gamma/read"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_dw_4_bn/beta/read"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_dw_4_bn/moving_mean/read"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_dw_4_bn/moving_variance/read"
  input: "conv_dw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_4_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_4_bn/cond/FusedBatchNorm"
  input: "conv_dw_4_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_4_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_4_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3331518
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_4/random_uniform/max"
  input: "conv_pw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_4/random_uniform/RandomUniform"
  input: "conv_pw_4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/random_uniform"
  op: "Add"
  input: "conv_pw_4/random_uniform/mul"
  input: "conv_pw_4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4/kernel/Assign"
  op: "Assign"
  input: "conv_pw_4/kernel"
  input: "conv_pw_4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4/kernel/read"
  op: "Identity"
  input: "conv_pw_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_4/convolution"
  op: "Conv2D"
  input: "conv_dw_4_relu/Relu6"
  input: "conv_pw_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/gamma"
  input: "conv_pw_4_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_4_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/beta"
  input: "conv_pw_4_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/beta/read"
  op: "Identity"
  input: "conv_pw_4_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_mean"
  input: "conv_pw_4_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_variance"
  input: "conv_pw_4_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_4/convolution"
  input: "conv_pw_4_bn/gamma/read"
  input: "conv_pw_4_bn/beta/read"
  input: "conv_pw_4_bn/Const_4"
  input: "conv_pw_4_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape"
  input: "conv_pw_4_bn/strided_slice/stack"
  input: "conv_pw_4_bn/strided_slice/stack_1"
  input: "conv_pw_4_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape_1"
  input: "conv_pw_4_bn/strided_slice_1/stack"
  input: "conv_pw_4_bn/strided_slice_1/stack_1"
  input: "conv_pw_4_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_4_bn/Shape_2"
  input: "conv_pw_4_bn/strided_slice_2/stack"
  input: "conv_pw_4_bn/strided_slice_2/stack_1"
  input: "conv_pw_4_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_4_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_4_bn/strided_slice"
  input: "conv_pw_4_bn/strided_slice_1"
  input: "conv_pw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_4_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/range"
  op: "Range"
  input: "conv_pw_4_bn/range/start"
  input: "conv_pw_4_bn/Rank"
  input: "conv_pw_4_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_4_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_4_bn/strided_slice"
  input: "conv_pw_4_bn/strided_slice_1"
  input: "conv_pw_4_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_4_bn/Prod"
  op: "Prod"
  input: "conv_pw_4_bn/Prod/input"
  input: "conv_pw_4_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/Cast"
  op: "Cast"
  input: "conv_pw_4_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/sub"
  op: "Sub"
  input: "conv_pw_4_bn/Cast"
  input: "conv_pw_4_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_4_bn/Cast"
  input: "conv_pw_4_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/mul"
  op: "Mul"
  input: "conv_pw_4_bn/FusedBatchNorm:2"
  input: "conv_pw_4_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_mean/biased"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_mean/local_step"
  input: "conv_pw_4_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_4_bn/moving_mean/biased/read"
  input: "conv_pw_4_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub"
  input: "conv_pw_4_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_4_bn/moving_mean/biased"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_4_bn/moving_mean/local_step"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean/biased"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_1/x"
  input: "conv_pw_4_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_4_bn/moving_mean/local_step"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_1"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/conv_pw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_2/x"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/read"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_4_bn/moving_mean/read"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_4_bn/moving_mean"
  input: "conv_pw_4_bn/AssignMovingAvg/conv_pw_4_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_variance/biased"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_4_bn/moving_variance/local_step"
  input: "conv_pw_4_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_4_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_4_bn/moving_variance/biased/read"
  input: "conv_pw_4_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub"
  input: "conv_pw_4_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_4_bn/moving_variance/biased"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_4_bn/moving_variance/local_step"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance/biased"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_1/x"
  input: "conv_pw_4_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_4_bn/moving_variance/local_step"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_1"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/AssignAdd"
  input: "^conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/conv_pw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_2/x"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/read"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_4_bn/moving_variance/read"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_4_bn/moving_variance"
  input: "conv_pw_4_bn/AssignMovingAvg_1/conv_pw_4_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_4_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_4_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_4_bn/FusedBatchNorm"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_4_bn/cond/FusedBatchNorm/Switch"
  input: "conv_pw_4_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_pw_4_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_pw_4_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_pw_4_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_pw_4/convolution"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_pw_4_bn/gamma/read"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_pw_4_bn/beta/read"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_pw_4_bn/moving_mean/read"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_pw_4_bn/moving_variance/read"
  input: "conv_pw_4_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_4_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_4_bn/cond/FusedBatchNorm"
  input: "conv_pw_4_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_4_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_4_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958
      }
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6708105
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_5/random_uniform/max"
  input: "conv_dw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_5/random_uniform/RandomUniform"
  input: "conv_dw_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/random_uniform"
  op: "Add"
  input: "conv_dw_5/random_uniform/mul"
  input: "conv_dw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_5/depthwise_kernel"
  input: "conv_dw_5/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_5/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_5/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_5/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_4_relu/Relu6"
  input: "conv_dw_5/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/gamma"
  input: "conv_dw_5_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_5_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/beta"
  input: "conv_dw_5_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/beta/read"
  op: "Identity"
  input: "conv_dw_5_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_mean"
  input: "conv_dw_5_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_variance"
  input: "conv_dw_5_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_5/depthwise"
  input: "conv_dw_5_bn/gamma/read"
  input: "conv_dw_5_bn/beta/read"
  input: "conv_dw_5_bn/Const_4"
  input: "conv_dw_5_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape"
  input: "conv_dw_5_bn/strided_slice/stack"
  input: "conv_dw_5_bn/strided_slice/stack_1"
  input: "conv_dw_5_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape_1"
  input: "conv_dw_5_bn/strided_slice_1/stack"
  input: "conv_dw_5_bn/strided_slice_1/stack_1"
  input: "conv_dw_5_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_5/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_5_bn/Shape_2"
  input: "conv_dw_5_bn/strided_slice_2/stack"
  input: "conv_dw_5_bn/strided_slice_2/stack_1"
  input: "conv_dw_5_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_5_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_5_bn/strided_slice"
  input: "conv_dw_5_bn/strided_slice_1"
  input: "conv_dw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_5_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/range"
  op: "Range"
  input: "conv_dw_5_bn/range/start"
  input: "conv_dw_5_bn/Rank"
  input: "conv_dw_5_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_5_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_5_bn/strided_slice"
  input: "conv_dw_5_bn/strided_slice_1"
  input: "conv_dw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_5_bn/Prod"
  op: "Prod"
  input: "conv_dw_5_bn/Prod/input"
  input: "conv_dw_5_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/Cast"
  op: "Cast"
  input: "conv_dw_5_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/sub"
  op: "Sub"
  input: "conv_dw_5_bn/Cast"
  input: "conv_dw_5_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_5_bn/Cast"
  input: "conv_dw_5_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/mul"
  op: "Mul"
  input: "conv_dw_5_bn/FusedBatchNorm:2"
  input: "conv_dw_5_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_mean/biased"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_mean/local_step"
  input: "conv_dw_5_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_5_bn/moving_mean/biased/read"
  input: "conv_dw_5_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub"
  input: "conv_dw_5_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_5_bn/moving_mean/biased"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_5_bn/moving_mean/local_step"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean/biased"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_1/x"
  input: "conv_dw_5_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_5_bn/moving_mean/local_step"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_1"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/conv_dw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_2/x"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/read"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_5_bn/moving_mean/read"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_5_bn/moving_mean"
  input: "conv_dw_5_bn/AssignMovingAvg/conv_dw_5_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_variance/biased"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_5_bn/moving_variance/local_step"
  input: "conv_dw_5_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_5_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_5_bn/moving_variance/biased/read"
  input: "conv_dw_5_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub"
  input: "conv_dw_5_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_5_bn/moving_variance/biased"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_5_bn/moving_variance/local_step"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance/biased"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_1/x"
  input: "conv_dw_5_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_5_bn/moving_variance/local_step"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_1"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/AssignAdd"
  input: "^conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/conv_dw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_2/x"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/read"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_5_bn/moving_variance/read"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_5_bn/moving_variance"
  input: "conv_dw_5_bn/AssignMovingAvg_1/conv_dw_5_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_5_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_5_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_5_bn/FusedBatchNorm"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_5_bn/cond/FusedBatchNorm/Switch"
  input: "conv_dw_5_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_dw_5_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_dw_5_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_dw_5_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_dw_5/depthwise"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_dw_5_bn/gamma/read"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_dw_5_bn/beta/read"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_dw_5_bn/moving_mean/read"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_dw_5_bn/moving_variance/read"
  input: "conv_dw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_5_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_5_bn/cond/FusedBatchNorm"
  input: "conv_dw_5_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_5_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_5_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353
      }
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3235849
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_5/random_uniform/max"
  input: "conv_pw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_5/random_uniform/RandomUniform"
  input: "conv_pw_5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/random_uniform"
  op: "Add"
  input: "conv_pw_5/random_uniform/mul"
  input: "conv_pw_5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5/kernel/Assign"
  op: "Assign"
  input: "conv_pw_5/kernel"
  input: "conv_pw_5/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5/kernel/read"
  op: "Identity"
  input: "conv_pw_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_5/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_5/convolution"
  op: "Conv2D"
  input: "conv_dw_5_relu/Relu6"
  input: "conv_pw_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/gamma"
  input: "conv_pw_5_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_5_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/beta"
  input: "conv_pw_5_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/beta/read"
  op: "Identity"
  input: "conv_pw_5_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_mean"
  input: "conv_pw_5_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_variance"
  input: "conv_pw_5_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_5/convolution"
  input: "conv_pw_5_bn/gamma/read"
  input: "conv_pw_5_bn/beta/read"
  input: "conv_pw_5_bn/Const_4"
  input: "conv_pw_5_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape"
  input: "conv_pw_5_bn/strided_slice/stack"
  input: "conv_pw_5_bn/strided_slice/stack_1"
  input: "conv_pw_5_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape_1"
  input: "conv_pw_5_bn/strided_slice_1/stack"
  input: "conv_pw_5_bn/strided_slice_1/stack_1"
  input: "conv_pw_5_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_5_bn/Shape_2"
  input: "conv_pw_5_bn/strided_slice_2/stack"
  input: "conv_pw_5_bn/strided_slice_2/stack_1"
  input: "conv_pw_5_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_5_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_5_bn/strided_slice"
  input: "conv_pw_5_bn/strided_slice_1"
  input: "conv_pw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_5_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/range"
  op: "Range"
  input: "conv_pw_5_bn/range/start"
  input: "conv_pw_5_bn/Rank"
  input: "conv_pw_5_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_5_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_5_bn/strided_slice"
  input: "conv_pw_5_bn/strided_slice_1"
  input: "conv_pw_5_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_5_bn/Prod"
  op: "Prod"
  input: "conv_pw_5_bn/Prod/input"
  input: "conv_pw_5_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/Cast"
  op: "Cast"
  input: "conv_pw_5_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/sub"
  op: "Sub"
  input: "conv_pw_5_bn/Cast"
  input: "conv_pw_5_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_5_bn/Cast"
  input: "conv_pw_5_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/mul"
  op: "Mul"
  input: "conv_pw_5_bn/FusedBatchNorm:2"
  input: "conv_pw_5_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_mean/biased"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_mean/local_step"
  input: "conv_pw_5_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_5_bn/moving_mean/biased/read"
  input: "conv_pw_5_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub"
  input: "conv_pw_5_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_5_bn/moving_mean/biased"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_5_bn/moving_mean/local_step"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean/biased"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_1/x"
  input: "conv_pw_5_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_5_bn/moving_mean/local_step"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_1"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/conv_pw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_2/x"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/read"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_5_bn/moving_mean/read"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_5_bn/moving_mean"
  input: "conv_pw_5_bn/AssignMovingAvg/conv_pw_5_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_variance/biased"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_5_bn/moving_variance/local_step"
  input: "conv_pw_5_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_5_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_5_bn/moving_variance/biased/read"
  input: "conv_pw_5_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub"
  input: "conv_pw_5_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_5_bn/moving_variance/biased"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_5_bn/moving_variance/local_step"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance/biased"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_1/x"
  input: "conv_pw_5_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_5_bn/moving_variance/local_step"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_1"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/AssignAdd"
  input: "^conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/conv_pw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_2/x"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/read"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_5_bn/moving_variance/read"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_5_bn/moving_variance"
  input: "conv_pw_5_bn/AssignMovingAvg_1/conv_pw_5_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_5_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_5_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_5_bn/FusedBatchNorm"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_5_bn/cond/FusedBatchNorm/Switch"
  input: "conv_pw_5_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_pw_5_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_pw_5_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_pw_5_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_pw_5/convolution"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_pw_5_bn/gamma/read"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_pw_5_bn/beta/read"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_pw_5_bn/moving_mean/read"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_pw_5_bn/moving_variance/read"
  input: "conv_pw_5_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_5_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_5_bn/cond/FusedBatchNorm"
  input: "conv_pw_5_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_5_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_5_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pad_6/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pad_6/Pad"
  op: "Pad"
  input: "conv_pw_5_relu/Relu6"
  input: "conv_pad_6/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958
      }
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1784371
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_6/random_uniform/max"
  input: "conv_dw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_6/random_uniform/RandomUniform"
  input: "conv_dw_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/random_uniform"
  op: "Add"
  input: "conv_dw_6/random_uniform/mul"
  input: "conv_dw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_6/depthwise_kernel"
  input: "conv_dw_6/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_6/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_6/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_6/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pad_6/Pad"
  input: "conv_dw_6/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/gamma"
  input: "conv_dw_6_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_6_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/beta"
  input: "conv_dw_6_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/beta/read"
  op: "Identity"
  input: "conv_dw_6_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_mean"
  input: "conv_dw_6_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_variance"
  input: "conv_dw_6_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_6/depthwise"
  input: "conv_dw_6_bn/gamma/read"
  input: "conv_dw_6_bn/beta/read"
  input: "conv_dw_6_bn/Const_4"
  input: "conv_dw_6_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape"
  input: "conv_dw_6_bn/strided_slice/stack"
  input: "conv_dw_6_bn/strided_slice/stack_1"
  input: "conv_dw_6_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape_1"
  input: "conv_dw_6_bn/strided_slice_1/stack"
  input: "conv_dw_6_bn/strided_slice_1/stack_1"
  input: "conv_dw_6_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_6/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_6_bn/Shape_2"
  input: "conv_dw_6_bn/strided_slice_2/stack"
  input: "conv_dw_6_bn/strided_slice_2/stack_1"
  input: "conv_dw_6_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_6_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_6_bn/strided_slice"
  input: "conv_dw_6_bn/strided_slice_1"
  input: "conv_dw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_6_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/range"
  op: "Range"
  input: "conv_dw_6_bn/range/start"
  input: "conv_dw_6_bn/Rank"
  input: "conv_dw_6_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_6_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_6_bn/strided_slice"
  input: "conv_dw_6_bn/strided_slice_1"
  input: "conv_dw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_6_bn/Prod"
  op: "Prod"
  input: "conv_dw_6_bn/Prod/input"
  input: "conv_dw_6_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/Cast"
  op: "Cast"
  input: "conv_dw_6_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/sub"
  op: "Sub"
  input: "conv_dw_6_bn/Cast"
  input: "conv_dw_6_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_6_bn/Cast"
  input: "conv_dw_6_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/mul"
  op: "Mul"
  input: "conv_dw_6_bn/FusedBatchNorm:2"
  input: "conv_dw_6_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_mean/biased"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_mean/local_step"
  input: "conv_dw_6_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_6_bn/moving_mean/biased/read"
  input: "conv_dw_6_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub"
  input: "conv_dw_6_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_6_bn/moving_mean/biased"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_6_bn/moving_mean/local_step"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean/biased"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_1/x"
  input: "conv_dw_6_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_6_bn/moving_mean/local_step"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_1"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/conv_dw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_2/x"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/read"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_6_bn/moving_mean/read"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_6_bn/moving_mean"
  input: "conv_dw_6_bn/AssignMovingAvg/conv_dw_6_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_variance/biased"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_6_bn/moving_variance/local_step"
  input: "conv_dw_6_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_6_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_6_bn/moving_variance/biased/read"
  input: "conv_dw_6_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub"
  input: "conv_dw_6_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_6_bn/moving_variance/biased"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_6_bn/moving_variance/local_step"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance/biased"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_1/x"
  input: "conv_dw_6_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_6_bn/moving_variance/local_step"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_1"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/AssignAdd"
  input: "^conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/conv_dw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_2/x"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/read"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_6_bn/moving_variance/read"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_6_bn/moving_variance"
  input: "conv_dw_6_bn/AssignMovingAvg_1/conv_dw_6_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_6_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_6_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_6_bn/FusedBatchNorm"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_6_bn/cond/FusedBatchNorm/Switch"
  input: "conv_dw_6_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_dw_6_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_dw_6_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_dw_6_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_dw_6/depthwise"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_dw_6_bn/gamma/read"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_dw_6_bn/beta/read"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_dw_6_bn/moving_mean/read"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_dw_6_bn/moving_variance/read"
  input: "conv_dw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_6_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_6_bn/cond/FusedBatchNorm"
  input: "conv_dw_6_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_6_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_6_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356
      }
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7705611
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_6/random_uniform/max"
  input: "conv_pw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_6/random_uniform/RandomUniform"
  input: "conv_pw_6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/random_uniform"
  op: "Add"
  input: "conv_pw_6/random_uniform/mul"
  input: "conv_pw_6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6/kernel/Assign"
  op: "Assign"
  input: "conv_pw_6/kernel"
  input: "conv_pw_6/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6/kernel/read"
  op: "Identity"
  input: "conv_pw_6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_6/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_6/convolution"
  op: "Conv2D"
  input: "conv_dw_6_relu/Relu6"
  input: "conv_pw_6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/gamma"
  input: "conv_pw_6_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_6_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/beta"
  input: "conv_pw_6_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/beta/read"
  op: "Identity"
  input: "conv_pw_6_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_mean"
  input: "conv_pw_6_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_variance"
  input: "conv_pw_6_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_6/convolution"
  input: "conv_pw_6_bn/gamma/read"
  input: "conv_pw_6_bn/beta/read"
  input: "conv_pw_6_bn/Const_4"
  input: "conv_pw_6_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape"
  input: "conv_pw_6_bn/strided_slice/stack"
  input: "conv_pw_6_bn/strided_slice/stack_1"
  input: "conv_pw_6_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape_1"
  input: "conv_pw_6_bn/strided_slice_1/stack"
  input: "conv_pw_6_bn/strided_slice_1/stack_1"
  input: "conv_pw_6_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_6_bn/Shape_2"
  input: "conv_pw_6_bn/strided_slice_2/stack"
  input: "conv_pw_6_bn/strided_slice_2/stack_1"
  input: "conv_pw_6_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_6_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_6_bn/strided_slice"
  input: "conv_pw_6_bn/strided_slice_1"
  input: "conv_pw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_6_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/range"
  op: "Range"
  input: "conv_pw_6_bn/range/start"
  input: "conv_pw_6_bn/Rank"
  input: "conv_pw_6_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_6_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_6_bn/strided_slice"
  input: "conv_pw_6_bn/strided_slice_1"
  input: "conv_pw_6_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_6_bn/Prod"
  op: "Prod"
  input: "conv_pw_6_bn/Prod/input"
  input: "conv_pw_6_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/Cast"
  op: "Cast"
  input: "conv_pw_6_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/sub"
  op: "Sub"
  input: "conv_pw_6_bn/Cast"
  input: "conv_pw_6_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_6_bn/Cast"
  input: "conv_pw_6_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/mul"
  op: "Mul"
  input: "conv_pw_6_bn/FusedBatchNorm:2"
  input: "conv_pw_6_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_mean/biased"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_mean/local_step"
  input: "conv_pw_6_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_6_bn/moving_mean/biased/read"
  input: "conv_pw_6_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub"
  input: "conv_pw_6_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_6_bn/moving_mean/biased"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_6_bn/moving_mean/local_step"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean/biased"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_1/x"
  input: "conv_pw_6_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_6_bn/moving_mean/local_step"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_1"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/conv_pw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_2/x"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/read"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_6_bn/moving_mean/read"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_6_bn/moving_mean"
  input: "conv_pw_6_bn/AssignMovingAvg/conv_pw_6_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_variance/biased"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_6_bn/moving_variance/local_step"
  input: "conv_pw_6_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_6_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_6_bn/moving_variance/biased/read"
  input: "conv_pw_6_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub"
  input: "conv_pw_6_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_6_bn/moving_variance/biased"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_6_bn/moving_variance/local_step"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance/biased"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_1/x"
  input: "conv_pw_6_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_6_bn/moving_variance/local_step"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_1"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/AssignAdd"
  input: "^conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/conv_pw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_2/x"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/read"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_6_bn/moving_variance/read"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_6_bn/moving_variance"
  input: "conv_pw_6_bn/AssignMovingAvg_1/conv_pw_6_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_6_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_6_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_6_bn/FusedBatchNorm"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_6_bn/cond/FusedBatchNorm/Switch"
  input: "conv_pw_6_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_pw_6_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_pw_6_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_pw_6_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_pw_6/convolution"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_pw_6_bn/gamma/read"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_pw_6_bn/beta/read"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_pw_6_bn/moving_mean/read"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_pw_6_bn/moving_variance/read"
  input: "conv_pw_6_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_6_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_6_bn/cond/FusedBatchNorm"
  input: "conv_pw_6_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_6_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_6_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0360492058098
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0360492058098
      }
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_dw_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4863899
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/sub"
  op: "Sub"
  input: "conv_dw_7/random_uniform/max"
  input: "conv_dw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/random_uniform/mul"
  op: "Mul"
  input: "conv_dw_7/random_uniform/RandomUniform"
  input: "conv_dw_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/random_uniform"
  op: "Add"
  input: "conv_dw_7/random_uniform/mul"
  input: "conv_dw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv_dw_7/depthwise_kernel"
  input: "conv_dw_7/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7/depthwise_kernel/read"
  op: "Identity"
  input: "conv_dw_7/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv_dw_7/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_dw_7/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv_pw_6_relu/Relu6"
  input: "conv_dw_7/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/gamma"
  input: "conv_dw_7_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/gamma/read"
  op: "Identity"
  input: "conv_dw_7_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/beta/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/beta"
  input: "conv_dw_7_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/beta/read"
  op: "Identity"
  input: "conv_dw_7_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_mean"
  input: "conv_dw_7_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_variance"
  input: "conv_dw_7_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_7/depthwise"
  input: "conv_dw_7_bn/gamma/read"
  input: "conv_dw_7_bn/beta/read"
  input: "conv_dw_7_bn/Const_4"
  input: "conv_dw_7_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape"
  input: "conv_dw_7_bn/strided_slice/stack"
  input: "conv_dw_7_bn/strided_slice/stack_1"
  input: "conv_dw_7_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape_1"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape_1"
  input: "conv_dw_7_bn/strided_slice_1/stack"
  input: "conv_dw_7_bn/strided_slice_1/stack_1"
  input: "conv_dw_7_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Shape_2"
  op: "Shape"
  input: "conv_dw_7/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_dw_7_bn/Shape_2"
  input: "conv_dw_7_bn/strided_slice_2/stack"
  input: "conv_dw_7_bn/strided_slice_2/stack_1"
  input: "conv_dw_7_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_dw_7_bn/Rank/packed"
  op: "Pack"
  input: "conv_dw_7_bn/strided_slice"
  input: "conv_dw_7_bn/strided_slice_1"
  input: "conv_dw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_7_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/range"
  op: "Range"
  input: "conv_dw_7_bn/range/start"
  input: "conv_dw_7_bn/Rank"
  input: "conv_dw_7_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_dw_7_bn/Prod/input"
  op: "Pack"
  input: "conv_dw_7_bn/strided_slice"
  input: "conv_dw_7_bn/strided_slice_1"
  input: "conv_dw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_dw_7_bn/Prod"
  op: "Prod"
  input: "conv_dw_7_bn/Prod/input"
  input: "conv_dw_7_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/Cast"
  op: "Cast"
  input: "conv_dw_7_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/sub"
  op: "Sub"
  input: "conv_dw_7_bn/Cast"
  input: "conv_dw_7_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/truediv"
  op: "RealDiv"
  input: "conv_dw_7_bn/Cast"
  input: "conv_dw_7_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/mul"
  op: "Mul"
  input: "conv_dw_7_bn/FusedBatchNorm:2"
  input: "conv_dw_7_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_mean/biased"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_mean/local_step"
  input: "conv_dw_7_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_dw_7_bn/moving_mean/biased/read"
  input: "conv_dw_7_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub"
  input: "conv_dw_7_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  op: "AssignSub"
  input: "conv_dw_7_bn/moving_mean/biased"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_7_bn/moving_mean/local_step"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean/biased"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_1/x"
  input: "conv_dw_7_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_dw_7_bn/moving_mean/local_step"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_1"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/conv_dw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_2/x"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/read"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_dw_7_bn/moving_mean/read"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_dw_7_bn/moving_mean"
  input: "conv_dw_7_bn/AssignMovingAvg/conv_dw_7_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_variance/biased"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_dw_7_bn/moving_variance/local_step"
  input: "conv_dw_7_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_dw_7_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_dw_7_bn/moving_variance/biased/read"
  input: "conv_dw_7_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub"
  input: "conv_dw_7_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  op: "AssignSub"
  input: "conv_dw_7_bn/moving_variance/biased"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_dw_7_bn/moving_variance/local_step"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/read"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance/biased"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_1/x"
  input: "conv_dw_7_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_dw_7_bn/moving_variance/local_step"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_1"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/AssignAdd"
  input: "^conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/conv_dw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_2/x"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/read"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_dw_7_bn/moving_variance/read"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_dw_7_bn/moving_variance"
  input: "conv_dw_7_bn/AssignMovingAvg_1/conv_dw_7_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/switch_t"
  op: "Identity"
  input: "conv_dw_7_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/switch_f"
  op: "Identity"
  input: "conv_dw_7_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_dw_7_bn/FusedBatchNorm"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_dw_7_bn/cond/FusedBatchNorm/Switch"
  input: "conv_dw_7_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_dw_7_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_dw_7_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_dw_7_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_dw_7/depthwise"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_dw_7_bn/gamma/read"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_dw_7_bn/beta/read"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_dw_7_bn/moving_mean/read"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_dw_7_bn/moving_variance/read"
  input: "conv_dw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_dw_7_bn/cond/Merge"
  op: "Merge"
  input: "conv_dw_7_bn/cond/FusedBatchNorm"
  input: "conv_dw_7_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_dw_7_relu/Relu6"
  op: "Relu6"
  input: "conv_dw_7_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476
      }
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_pw_7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 830894
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/sub"
  op: "Sub"
  input: "conv_pw_7/random_uniform/max"
  input: "conv_pw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform/mul"
  op: "Mul"
  input: "conv_pw_7/random_uniform/RandomUniform"
  input: "conv_pw_7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/random_uniform"
  op: "Add"
  input: "conv_pw_7/random_uniform/mul"
  input: "conv_pw_7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7/kernel/Assign"
  op: "Assign"
  input: "conv_pw_7/kernel"
  input: "conv_pw_7/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7/kernel/read"
  op: "Identity"
  input: "conv_pw_7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
}
node {
  name: "conv_pw_7/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv_pw_7/convolution"
  op: "Conv2D"
  input: "conv_dw_7_relu/Relu6"
  input: "conv_pw_7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/gamma"
  input: "conv_pw_7_bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/gamma/read"
  op: "Identity"
  input: "conv_pw_7_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/beta/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/beta"
  input: "conv_pw_7_bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/beta/read"
  op: "Identity"
  input: "conv_pw_7_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_mean"
  input: "conv_pw_7_bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_variance"
  input: "conv_pw_7_bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_7/convolution"
  input: "conv_pw_7_bn/gamma/read"
  input: "conv_pw_7_bn/beta/read"
  input: "conv_pw_7_bn/Const_4"
  input: "conv_pw_7_bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape"
  input: "conv_pw_7_bn/strided_slice/stack"
  input: "conv_pw_7_bn/strided_slice/stack_1"
  input: "conv_pw_7_bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape_1"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape_1"
  input: "conv_pw_7_bn/strided_slice_1/stack"
  input: "conv_pw_7_bn/strided_slice_1/stack_1"
  input: "conv_pw_7_bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Shape_2"
  op: "Shape"
  input: "conv_pw_7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv_pw_7_bn/Shape_2"
  input: "conv_pw_7_bn/strided_slice_2/stack"
  input: "conv_pw_7_bn/strided_slice_2/stack_1"
  input: "conv_pw_7_bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv_pw_7_bn/Rank/packed"
  op: "Pack"
  input: "conv_pw_7_bn/strided_slice"
  input: "conv_pw_7_bn/strided_slice_1"
  input: "conv_pw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_7_bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/range"
  op: "Range"
  input: "conv_pw_7_bn/range/start"
  input: "conv_pw_7_bn/Rank"
  input: "conv_pw_7_bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_pw_7_bn/Prod/input"
  op: "Pack"
  input: "conv_pw_7_bn/strided_slice"
  input: "conv_pw_7_bn/strided_slice_1"
  input: "conv_pw_7_bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_pw_7_bn/Prod"
  op: "Prod"
  input: "conv_pw_7_bn/Prod/input"
  input: "conv_pw_7_bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/Cast"
  op: "Cast"
  input: "conv_pw_7_bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00100004673
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/sub"
  op: "Sub"
  input: "conv_pw_7_bn/Cast"
  input: "conv_pw_7_bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/truediv"
  op: "RealDiv"
  input: "conv_pw_7_bn/Cast"
  input: "conv_pw_7_bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/mul"
  op: "Mul"
  input: "conv_pw_7_bn/FusedBatchNorm:2"
  input: "conv_pw_7_bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_mean/biased"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_mean/local_step"
  input: "conv_pw_7_bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub"
  op: "Sub"
  input: "conv_pw_7_bn/moving_mean/biased/read"
  input: "conv_pw_7_bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/mul"
  op: "Mul"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub"
  input: "conv_pw_7_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  op: "AssignSub"
  input: "conv_pw_7_bn/moving_mean/biased"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_7_bn/moving_mean/local_step"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean/biased"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_1/x"
  input: "conv_pw_7_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/read_1"
  op: "Identity"
  input: "conv_pw_7_bn/moving_mean/local_step"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/Pow"
  op: "Pow"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_1"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/conv_pw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_2/x"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/read"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv_pw_7_bn/moving_mean/read"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv_pw_7_bn/moving_mean"
  input: "conv_pw_7_bn/AssignMovingAvg/conv_pw_7_bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_variance/biased"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv_pw_7_bn/moving_variance/local_step"
  input: "conv_pw_7_bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_pw_7_bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub"
  op: "Sub"
  input: "conv_pw_7_bn/moving_variance/biased/read"
  input: "conv_pw_7_bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/mul"
  op: "Mul"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub"
  input: "conv_pw_7_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  op: "AssignSub"
  input: "conv_pw_7_bn/moving_variance/biased"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv_pw_7_bn/moving_variance/local_step"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/read"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance/biased"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_1/x"
  input: "conv_pw_7_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/read_1"
  op: "Identity"
  input: "conv_pw_7_bn/moving_variance/local_step"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/Pow"
  op: "Pow"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_1"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/AssignAdd"
  input: "^conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/conv_pw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_2/x"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/read"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv_pw_7_bn/moving_variance/read"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv_pw_7_bn/moving_variance"
  input: "conv_pw_7_bn/AssignMovingAvg_1/conv_pw_7_bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/Switch"
  op: "Switch"
  input: "conv1_bn/keras_learning_phase"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/switch_t"
  op: "Identity"
  input: "conv_pw_7_bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/switch_f"
  op: "Identity"
  input: "conv_pw_7_bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/pred_id"
  op: "Identity"
  input: "conv1_bn/keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/Switch_1"
  op: "Switch"
  input: "conv_pw_7_bn/FusedBatchNorm"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/FusedBatchNorm"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv_pw_7_bn/cond/FusedBatchNorm/Switch"
  input: "conv_pw_7_bn/cond/FusedBatchNorm/Switch_1"
  input: "conv_pw_7_bn/cond/FusedBatchNorm/Switch_2"
  input: "conv_pw_7_bn/cond/FusedBatchNorm/Switch_3"
  input: "conv_pw_7_bn/cond/FusedBatchNorm/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/FusedBatchNorm/Switch"
  op: "Switch"
  input: "conv_pw_7/convolution"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/convolution"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/FusedBatchNorm/Switch_1"
  op: "Switch"
  input: "conv_pw_7_bn/gamma/read"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/FusedBatchNorm/Switch_2"
  op: "Switch"
  input: "conv_pw_7_bn/beta/read"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/FusedBatchNorm/Switch_3"
  op: "Switch"
  input: "conv_pw_7_bn/moving_mean/read"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/FusedBatchNorm/Switch_4"
  op: "Switch"
  input: "conv_pw_7_bn/moving_variance/read"
  input: "conv_pw_7_bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv_pw_7_bn/cond/Merge"
  op: "Merge"
  input: "conv_pw_7_bn/cond/FusedBatchNorm"
  input: "conv_pw_7_bn/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv_pw_7_relu/Relu6"
  op: "Relu6"
  input: "conv_pw_7_bn/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0500000007451
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "net_vlad_layer_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4236690
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform/sub"
  op: "Sub"
  input: "net_vlad_layer_1/random_uniform/max"
  input: "net_vlad_layer_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform/mul"
  op: "Mul"
  input: "net_vlad_layer_1/random_uniform/RandomUniform"
  input: "net_vlad_layer_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform"
  op: "Add"
  input: "net_vlad_layer_1/random_uniform/mul"
  input: "net_vlad_layer_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "net_vlad_layer_1/kernel/Assign"
  op: "Assign"
  input: "net_vlad_layer_1/kernel"
  input: "net_vlad_layer_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "net_vlad_layer_1/kernel/read"
  op: "Identity"
  input: "net_vlad_layer_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/kernel"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_1/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0500000007451
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_1/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "net_vlad_layer_1/random_uniform_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4366826
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_1/sub"
  op: "Sub"
  input: "net_vlad_layer_1/random_uniform_1/max"
  input: "net_vlad_layer_1/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_1/mul"
  op: "Mul"
  input: "net_vlad_layer_1/random_uniform_1/RandomUniform"
  input: "net_vlad_layer_1/random_uniform_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_1"
  op: "Add"
  input: "net_vlad_layer_1/random_uniform_1/mul"
  input: "net_vlad_layer_1/random_uniform_1/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "net_vlad_layer_1/bias/Assign"
  op: "Assign"
  input: "net_vlad_layer_1/bias"
  input: "net_vlad_layer_1/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "net_vlad_layer_1/bias/read"
  op: "Identity"
  input: "net_vlad_layer_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/bias"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_2/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0500000007451
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_2/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "net_vlad_layer_1/random_uniform_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8832237
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_2/sub"
  op: "Sub"
  input: "net_vlad_layer_1/random_uniform_2/max"
  input: "net_vlad_layer_1/random_uniform_2/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_2/mul"
  op: "Mul"
  input: "net_vlad_layer_1/random_uniform_2/RandomUniform"
  input: "net_vlad_layer_1/random_uniform_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/random_uniform_2"
  op: "Add"
  input: "net_vlad_layer_1/random_uniform_2/mul"
  input: "net_vlad_layer_1/random_uniform_2/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/cluster_centers"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "net_vlad_layer_1/cluster_centers/Assign"
  op: "Assign"
  input: "net_vlad_layer_1/cluster_centers"
  input: "net_vlad_layer_1/random_uniform_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/cluster_centers"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "net_vlad_layer_1/cluster_centers/read"
  op: "Identity"
  input: "net_vlad_layer_1/cluster_centers"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/cluster_centers"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/convolution"
  op: "Conv2D"
  input: "conv_pw_7_relu/Relu6"
  input: "net_vlad_layer_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "net_vlad_layer_1/add"
  op: "Add"
  input: "net_vlad_layer_1/convolution"
  input: "net_vlad_layer_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/Softmax"
  op: "Softmax"
  input: "net_vlad_layer_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/ArgMax"
  op: "ArgMax"
  input: "net_vlad_layer_1/Softmax"
  input: "net_vlad_layer_1/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "net_vlad_layer_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/ExpandDims"
  op: "ExpandDims"
  input: "net_vlad_layer_1/Softmax"
  input: "net_vlad_layer_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "net_vlad_layer_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/ExpandDims_1"
  op: "ExpandDims"
  input: "conv_pw_7_relu/Relu6"
  input: "net_vlad_layer_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "net_vlad_layer_1/add_1"
  op: "Add"
  input: "net_vlad_layer_1/ExpandDims_1"
  input: "net_vlad_layer_1/cluster_centers/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/mul"
  op: "Mul"
  input: "net_vlad_layer_1/ExpandDims"
  input: "net_vlad_layer_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/Sum"
  op: "Sum"
  input: "net_vlad_layer_1/mul"
  input: "net_vlad_layer_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "net_vlad_layer_1/transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/transpose"
  op: "Transpose"
  input: "net_vlad_layer_1/Sum"
  input: "net_vlad_layer_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize/Square"
  op: "Square"
  input: "net_vlad_layer_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize/Sum"
  op: "Sum"
  input: "net_vlad_layer_1/l2_normalize/Square"
  input: "net_vlad_layer_1/l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize/Maximum"
  op: "Maximum"
  input: "net_vlad_layer_1/l2_normalize/Sum"
  input: "net_vlad_layer_1/l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "net_vlad_layer_1/l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize"
  op: "Mul"
  input: "net_vlad_layer_1/transpose"
  input: "net_vlad_layer_1/l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/Shape"
  op: "Shape"
  input: "net_vlad_layer_1/l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "net_vlad_layer_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/strided_slice"
  op: "StridedSlice"
  input: "net_vlad_layer_1/Shape"
  input: "net_vlad_layer_1/strided_slice/stack"
  input: "net_vlad_layer_1/strided_slice/stack_1"
  input: "net_vlad_layer_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "net_vlad_layer_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/Prod"
  op: "Prod"
  input: "net_vlad_layer_1/strided_slice"
  input: "net_vlad_layer_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "net_vlad_layer_1/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/stack"
  op: "Pack"
  input: "net_vlad_layer_1/stack/0"
  input: "net_vlad_layer_1/Prod"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "net_vlad_layer_1/Reshape"
  op: "Reshape"
  input: "net_vlad_layer_1/l2_normalize"
  input: "net_vlad_layer_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize_1/Square"
  op: "Square"
  input: "net_vlad_layer_1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize_1/Sum"
  op: "Sum"
  input: "net_vlad_layer_1/l2_normalize_1/Square"
  input: "net_vlad_layer_1/l2_normalize_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize_1/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize_1/Maximum"
  op: "Maximum"
  input: "net_vlad_layer_1/l2_normalize_1/Sum"
  input: "net_vlad_layer_1/l2_normalize_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize_1/Rsqrt"
  op: "Rsqrt"
  input: "net_vlad_layer_1/l2_normalize_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "net_vlad_layer_1/l2_normalize_1"
  op: "Mul"
  input: "net_vlad_layer_1/Reshape"
  input: "net_vlad_layer_1/l2_normalize_1/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "conv1/kernel"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "conv1_bn/gamma"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "conv1_bn/beta"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "conv1_bn/moving_mean"
  input: "Placeholder_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "conv1_bn/moving_variance"
  input: "Placeholder_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "conv_dw_1/depthwise_kernel"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "conv_dw_1_bn/gamma"
  input: "Placeholder_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "conv_dw_1_bn/beta"
  input: "Placeholder_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "conv_dw_1_bn/moving_mean"
  input: "Placeholder_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "conv_dw_1_bn/moving_variance"
  input: "Placeholder_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "conv_pw_1/kernel"
  input: "Placeholder_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "conv_pw_1_bn/gamma"
  input: "Placeholder_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "conv_pw_1_bn/beta"
  input: "Placeholder_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "conv_pw_1_bn/moving_mean"
  input: "Placeholder_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "conv_pw_1_bn/moving_variance"
  input: "Placeholder_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "conv_dw_2/depthwise_kernel"
  input: "Placeholder_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "conv_dw_2_bn/gamma"
  input: "Placeholder_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "conv_dw_2_bn/beta"
  input: "Placeholder_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "conv_dw_2_bn/moving_mean"
  input: "Placeholder_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "conv_dw_2_bn/moving_variance"
  input: "Placeholder_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "conv_pw_2/kernel"
  input: "Placeholder_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "conv_pw_2_bn/gamma"
  input: "Placeholder_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "conv_pw_2_bn/beta"
  input: "Placeholder_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "conv_pw_2_bn/moving_mean"
  input: "Placeholder_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "conv_pw_2_bn/moving_variance"
  input: "Placeholder_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "conv_dw_3/depthwise_kernel"
  input: "Placeholder_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "conv_dw_3_bn/gamma"
  input: "Placeholder_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "conv_dw_3_bn/beta"
  input: "Placeholder_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "conv_dw_3_bn/moving_mean"
  input: "Placeholder_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "conv_dw_3_bn/moving_variance"
  input: "Placeholder_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "conv_pw_3/kernel"
  input: "Placeholder_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "conv_pw_3_bn/gamma"
  input: "Placeholder_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "conv_pw_3_bn/beta"
  input: "Placeholder_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "conv_pw_3_bn/moving_mean"
  input: "Placeholder_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "conv_pw_3_bn/moving_variance"
  input: "Placeholder_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "conv_dw_4/depthwise_kernel"
  input: "Placeholder_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "conv_dw_4_bn/gamma"
  input: "Placeholder_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "conv_dw_4_bn/beta"
  input: "Placeholder_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "conv_dw_4_bn/moving_mean"
  input: "Placeholder_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "conv_dw_4_bn/moving_variance"
  input: "Placeholder_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "conv_pw_4/kernel"
  input: "Placeholder_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "conv_pw_4_bn/gamma"
  input: "Placeholder_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "conv_pw_4_bn/beta"
  input: "Placeholder_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "conv_pw_4_bn/moving_mean"
  input: "Placeholder_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "conv_pw_4_bn/moving_variance"
  input: "Placeholder_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "conv_dw_5/depthwise_kernel"
  input: "Placeholder_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "conv_dw_5_bn/gamma"
  input: "Placeholder_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "conv_dw_5_bn/beta"
  input: "Placeholder_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "conv_dw_5_bn/moving_mean"
  input: "Placeholder_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "conv_dw_5_bn/moving_variance"
  input: "Placeholder_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "conv_pw_5/kernel"
  input: "Placeholder_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "conv_pw_5_bn/gamma"
  input: "Placeholder_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "conv_pw_5_bn/beta"
  input: "Placeholder_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "conv_pw_5_bn/moving_mean"
  input: "Placeholder_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "conv_pw_5_bn/moving_variance"
  input: "Placeholder_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "conv_dw_6/depthwise_kernel"
  input: "Placeholder_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "conv_dw_6_bn/gamma"
  input: "Placeholder_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "conv_dw_6_bn/beta"
  input: "Placeholder_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "conv_dw_6_bn/moving_mean"
  input: "Placeholder_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "conv_dw_6_bn/moving_variance"
  input: "Placeholder_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_60"
  op: "Assign"
  input: "conv_pw_6/kernel"
  input: "Placeholder_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_61"
  op: "Assign"
  input: "conv_pw_6_bn/gamma"
  input: "Placeholder_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_62"
  op: "Assign"
  input: "conv_pw_6_bn/beta"
  input: "Placeholder_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_63"
  op: "Assign"
  input: "conv_pw_6_bn/moving_mean"
  input: "Placeholder_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_64"
  op: "Assign"
  input: "conv_pw_6_bn/moving_variance"
  input: "Placeholder_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_65"
  op: "Assign"
  input: "conv_dw_7/depthwise_kernel"
  input: "Placeholder_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_66"
  op: "Assign"
  input: "conv_dw_7_bn/gamma"
  input: "Placeholder_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_67"
  op: "Assign"
  input: "conv_dw_7_bn/beta"
  input: "Placeholder_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_68"
  op: "Assign"
  input: "conv_dw_7_bn/moving_mean"
  input: "Placeholder_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_69"
  op: "Assign"
  input: "conv_dw_7_bn/moving_variance"
  input: "Placeholder_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_70"
  op: "Assign"
  input: "conv_pw_7/kernel"
  input: "Placeholder_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_71"
  op: "Assign"
  input: "conv_pw_7_bn/gamma"
  input: "Placeholder_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_72"
  op: "Assign"
  input: "conv_pw_7_bn/beta"
  input: "Placeholder_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_73"
  op: "Assign"
  input: "conv_pw_7_bn/moving_mean"
  input: "Placeholder_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_74"
  op: "Assign"
  input: "conv_pw_7_bn/moving_variance"
  input: "Placeholder_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_75"
  op: "Assign"
  input: "net_vlad_layer_1/kernel"
  input: "Placeholder_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_76"
  op: "Assign"
  input: "net_vlad_layer_1/bias"
  input: "Placeholder_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_77"
  op: "Assign"
  input: "net_vlad_layer_1/cluster_centers"
  input: "Placeholder_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/cluster_centers"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv1_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv_dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv_dw_1_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv_pw_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv_pw_1_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv_dw_2/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "conv_dw_2_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "conv_pw_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv_pw_2_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv_dw_3/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "conv_dw_3_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "conv_pw_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv_pw_3_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_3_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv_dw_4/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "conv_dw_4_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "conv_pw_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "conv_pw_4_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_4_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "conv_dw_5/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "conv_dw_5_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "conv_pw_5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv_pw_5_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_5_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "conv_dw_6/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "conv_dw_6_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv_pw_6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "conv_pw_6_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_6_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "conv_dw_7/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "conv_dw_7_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_dw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "conv_pw_7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "conv_pw_7_bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_pw_7_bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "net_vlad_layer_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "net_vlad_layer_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "net_vlad_layer_1/cluster_centers"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@net_vlad_layer_1/cluster_centers"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv1_bn/moving_mean/biased/Assign"
  input: "^conv1_bn/moving_mean/local_step/Assign"
  input: "^conv1_bn/moving_variance/biased/Assign"
  input: "^conv1_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_1/depthwise_kernel/Assign"
  input: "^conv_dw_1_bn/beta/Assign"
  input: "^conv_dw_1_bn/gamma/Assign"
  input: "^conv_dw_1_bn/moving_mean/Assign"
  input: "^conv_dw_1_bn/moving_mean/biased/Assign"
  input: "^conv_dw_1_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_1_bn/moving_variance/Assign"
  input: "^conv_dw_1_bn/moving_variance/biased/Assign"
  input: "^conv_dw_1_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_2/depthwise_kernel/Assign"
  input: "^conv_dw_2_bn/beta/Assign"
  input: "^conv_dw_2_bn/gamma/Assign"
  input: "^conv_dw_2_bn/moving_mean/Assign"
  input: "^conv_dw_2_bn/moving_mean/biased/Assign"
  input: "^conv_dw_2_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_2_bn/moving_variance/Assign"
  input: "^conv_dw_2_bn/moving_variance/biased/Assign"
  input: "^conv_dw_2_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_3/depthwise_kernel/Assign"
  input: "^conv_dw_3_bn/beta/Assign"
  input: "^conv_dw_3_bn/gamma/Assign"
  input: "^conv_dw_3_bn/moving_mean/Assign"
  input: "^conv_dw_3_bn/moving_mean/biased/Assign"
  input: "^conv_dw_3_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_3_bn/moving_variance/Assign"
  input: "^conv_dw_3_bn/moving_variance/biased/Assign"
  input: "^conv_dw_3_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_4/depthwise_kernel/Assign"
  input: "^conv_dw_4_bn/beta/Assign"
  input: "^conv_dw_4_bn/gamma/Assign"
  input: "^conv_dw_4_bn/moving_mean/Assign"
  input: "^conv_dw_4_bn/moving_mean/biased/Assign"
  input: "^conv_dw_4_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_4_bn/moving_variance/Assign"
  input: "^conv_dw_4_bn/moving_variance/biased/Assign"
  input: "^conv_dw_4_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_5/depthwise_kernel/Assign"
  input: "^conv_dw_5_bn/beta/Assign"
  input: "^conv_dw_5_bn/gamma/Assign"
  input: "^conv_dw_5_bn/moving_mean/Assign"
  input: "^conv_dw_5_bn/moving_mean/biased/Assign"
  input: "^conv_dw_5_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_5_bn/moving_variance/Assign"
  input: "^conv_dw_5_bn/moving_variance/biased/Assign"
  input: "^conv_dw_5_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_6/depthwise_kernel/Assign"
  input: "^conv_dw_6_bn/beta/Assign"
  input: "^conv_dw_6_bn/gamma/Assign"
  input: "^conv_dw_6_bn/moving_mean/Assign"
  input: "^conv_dw_6_bn/moving_mean/biased/Assign"
  input: "^conv_dw_6_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_6_bn/moving_variance/Assign"
  input: "^conv_dw_6_bn/moving_variance/biased/Assign"
  input: "^conv_dw_6_bn/moving_variance/local_step/Assign"
  input: "^conv_dw_7/depthwise_kernel/Assign"
  input: "^conv_dw_7_bn/beta/Assign"
  input: "^conv_dw_7_bn/gamma/Assign"
  input: "^conv_dw_7_bn/moving_mean/Assign"
  input: "^conv_dw_7_bn/moving_mean/biased/Assign"
  input: "^conv_dw_7_bn/moving_mean/local_step/Assign"
  input: "^conv_dw_7_bn/moving_variance/Assign"
  input: "^conv_dw_7_bn/moving_variance/biased/Assign"
  input: "^conv_dw_7_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_1/kernel/Assign"
  input: "^conv_pw_1_bn/beta/Assign"
  input: "^conv_pw_1_bn/gamma/Assign"
  input: "^conv_pw_1_bn/moving_mean/Assign"
  input: "^conv_pw_1_bn/moving_mean/biased/Assign"
  input: "^conv_pw_1_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_1_bn/moving_variance/Assign"
  input: "^conv_pw_1_bn/moving_variance/biased/Assign"
  input: "^conv_pw_1_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_2/kernel/Assign"
  input: "^conv_pw_2_bn/beta/Assign"
  input: "^conv_pw_2_bn/gamma/Assign"
  input: "^conv_pw_2_bn/moving_mean/Assign"
  input: "^conv_pw_2_bn/moving_mean/biased/Assign"
  input: "^conv_pw_2_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_2_bn/moving_variance/Assign"
  input: "^conv_pw_2_bn/moving_variance/biased/Assign"
  input: "^conv_pw_2_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_3/kernel/Assign"
  input: "^conv_pw_3_bn/beta/Assign"
  input: "^conv_pw_3_bn/gamma/Assign"
  input: "^conv_pw_3_bn/moving_mean/Assign"
  input: "^conv_pw_3_bn/moving_mean/biased/Assign"
  input: "^conv_pw_3_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_3_bn/moving_variance/Assign"
  input: "^conv_pw_3_bn/moving_variance/biased/Assign"
  input: "^conv_pw_3_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_4/kernel/Assign"
  input: "^conv_pw_4_bn/beta/Assign"
  input: "^conv_pw_4_bn/gamma/Assign"
  input: "^conv_pw_4_bn/moving_mean/Assign"
  input: "^conv_pw_4_bn/moving_mean/biased/Assign"
  input: "^conv_pw_4_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_4_bn/moving_variance/Assign"
  input: "^conv_pw_4_bn/moving_variance/biased/Assign"
  input: "^conv_pw_4_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_5/kernel/Assign"
  input: "^conv_pw_5_bn/beta/Assign"
  input: "^conv_pw_5_bn/gamma/Assign"
  input: "^conv_pw_5_bn/moving_mean/Assign"
  input: "^conv_pw_5_bn/moving_mean/biased/Assign"
  input: "^conv_pw_5_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_5_bn/moving_variance/Assign"
  input: "^conv_pw_5_bn/moving_variance/biased/Assign"
  input: "^conv_pw_5_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_6/kernel/Assign"
  input: "^conv_pw_6_bn/beta/Assign"
  input: "^conv_pw_6_bn/gamma/Assign"
  input: "^conv_pw_6_bn/moving_mean/Assign"
  input: "^conv_pw_6_bn/moving_mean/biased/Assign"
  input: "^conv_pw_6_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_6_bn/moving_variance/Assign"
  input: "^conv_pw_6_bn/moving_variance/biased/Assign"
  input: "^conv_pw_6_bn/moving_variance/local_step/Assign"
  input: "^conv_pw_7/kernel/Assign"
  input: "^conv_pw_7_bn/beta/Assign"
  input: "^conv_pw_7_bn/gamma/Assign"
  input: "^conv_pw_7_bn/moving_mean/Assign"
  input: "^conv_pw_7_bn/moving_mean/biased/Assign"
  input: "^conv_pw_7_bn/moving_mean/local_step/Assign"
  input: "^conv_pw_7_bn/moving_variance/Assign"
  input: "^conv_pw_7_bn/moving_variance/biased/Assign"
  input: "^conv_pw_7_bn/moving_variance/local_step/Assign"
  input: "^net_vlad_layer_1/bias/Assign"
  input: "^net_vlad_layer_1/cluster_centers/Assign"
  input: "^net_vlad_layer_1/kernel/Assign"
}
versions {
  producer: 27
}
